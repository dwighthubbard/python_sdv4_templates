namespace: python
name: documentation
description: Generate and publish docs to github pages using mkdocs or sphinx.  
version: 2020.1211.0
maintainer: python-devel@oath.com
images:
    alpine: alpine
    manylinux2010: quay.io/pypa/manylinux2010_x86_64
    manylinux2014: quay.io/pypa/manylinux2014_x86_64
    manylinux1_32: quay.io/pypa/manylinux1_i686
    manylinux1_64: quay.io/pypa/manylinux1_x86_64
config:
    image: manylinux2014
    environment:
        BASE_PYTHON: /opt/python/cp311-cp311/bin/python3
        GIT_SHALLOW_CLONE: false
        LANG: en_US.UTF-8
        SUB_PACKAGE_DIR: ''
        DOCUMENTATION_DEBUG: 'False'
        DOCUMENTATION_FORMATS: mkdocs,sphinx
        # DOCUMENTATION_PUBLISH: 'True'
        PYPIRUN_ARGS: --upgrade_pip
        SPHINX_THEME: read_the_docs
        SPHINX_COLLAPSE_NAVIGATION: 'True'
        SPHINX_DISPLAY_VERSION: 'False'
        SPHINX_NAVIGATION_DEPTH: '3'
        SPHINX_BOOTSWATCH_THEME: journal
    steps:
    -   begin: echo "Starting ${SD_TEMPLATE_FULLNAME}"
    -   motd: |
            cat << EOF
            Generate and publish docs to github pages using mkdocs or sphinx.  See https://git.ouroath.com/pages/dhubbard/sdv4_pythonv6_templates/documentation_templates/ for details.
            EOF
    -   disable_sonarqube: rm sonar-project.properties || true
    -   setup_environment: |
            export BINDIR="`dirname ${BASE_PYTHON}`"
            export PATH="${BINDIR}:/opt/python/bin:${PATH}"
    -   init_os: |
            sd-cmd exec python/python_bootstrap@stable
            source /tmp/python_bootstrap.env||/bin/true
    -   install_screwdrivercd_documentation: |
            LOGDIR="$SD_ARTIFACTS_DIR/logs/$SD_TEMPLATE_NAME"
            if [ ! -e "$LOGDIR" ]; then
                mkdir -p "$LOGDIR"
            fi
            echo "Installing screwdrivercd documentation extras"
            $BASE_PYTHON -m pip install screwdrivercd[documentation] 2>&1 | tee -a $LOGDIR/install_screwdrivercd_extra_documentation.log
    -   setup_deploy_keys: |
            if [ ! -z "$GIT_DEPLOY_KEY" ]; then
                pypirun screwdrivercd screwdrivercd_ssh_setup
                eval "$(ssh-agent -s)"
                pypirun screwdrivercd screwdrivercd_github_deploykey
            fi
    -   install_dependencies: $BASE_PYTHON -m screwdrivercd.installdeps
    -   update_version: $BASE_PYTHON -m screwdrivercd.version
    -   install_package_doc_build: |
            $BASE_PYTHON << EOF
            import json, os, sys
            from screwdrivercd.utility.package import PackageMetadata
            extras = []
            if os.path.exists('setup.py'):
                package = PackageMetadata()
                extras = list(package.metadata.get('provides_extras', set()))
                if 'doc_build' in extras:
                    with open('/tmp/doc_build_has_extras', 'w') as fh:
                        json.dump(extras, fh)
            EOF
            if [ -e "/tmp/doc_build_has_extras" ]; then
                echo "Installing package doc_build extras"
                $BASE_PYTHON -m pip install .[doc_build] 2>&1 | tee -a $LOGDIR/install_package_extra_doc_build.log
            fi
    -   publish_documentation: $BASE_PYTHON -m screwdrivercd.documentation
    -   end: echo "Ending ${SD_TEMPLATE_FULLNAME}"
    secrets:
    -   GIT_ACCESS_TOKEN
    -   GIT_DEPLOY_KEY
    -   GIT_DEPLOY_KEY_PASSPHRASE

