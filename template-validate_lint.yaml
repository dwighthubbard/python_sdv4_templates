namespace: python
name: validate_lint
description: Run the unittest using the tox tool
images:
    manylinux2010: quay.io/pypa/manylinux2010_x86_64
    manylinux1_32: quay.io/pypa/manylinux1_i686
    manylinux1_64: quay.io/pypa/manylinux1_x86_64
    ubuntu: ubuntu:latest
version: 1.0.0
maintainer: python-devel@oath.com
config:
    image: manylinux2010
    environment:
        BASE_PYTHON: /opt/python/cp37-cp37m/bin/python3
        PACKAGE_DIRECTORY: ""
        GIT_SHALLOW_CLONE: false
        LANG: en_US.UTF-8
    steps:
    -   begin: echo "Starting ${SD_TEMPLATE_FULLNAME}"
    -   motd: |
            cat << EOF
            This step will run static code analysis using the pylint tool
            EOF
    -   init_os: |
            sd-cmd exec python/python_bootstrap@stable
            source /tmp/python_bootstrap.env
    -   install_dependencies: pypirun screwdrivercd screwdrivercd_install_deps
    -   update_version: pypirun screwdrivercd screwdrivercd_version
    -   install_pylint: |
            VALID_VENV="$SD_SOURCE_DIR/pylintvenv"
            $BASE_PYTHON -m venv pylintvenv
            $VALID_VENV/bin/pip install pylint
            $VALID_VENV/bin/pip install .[lint]
    -   validate_code: |
            if [ -z "$PACKAGE_DIRECTORY"  ]; then
                PACKAGE_DIRECTORY="`$BASE_PYTHON setup.py --name`"
            fi
            OUTPUT_DIR="$SD_ARTIFACTS_DIR/reports/pylint"
            if [ -e "$OUTPUT_DIR" ]; then
                mkdir -p "$OUTPUT_DIR"
            fi
            # $VALID_VENV/bin/pylint --output-format=parseable $PACKAGE_DIR
            $VALID_VENV/bin/pylint -r n --msg-template="{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}" $PACKAGE_DIRECTORY | tee $SD_ARTIFACTS_DIR/pylint.txt
    -   end: echo "Ending ${SD_TEMPLATE_FULLNAME}"
